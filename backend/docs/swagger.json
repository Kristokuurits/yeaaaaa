{
    "openapi": "3.0.2",
    "info": {
        "version": "1.0",
        "title": "KinnistatudKallistus",
        "description": "### This is a Swagger UI for our Games API  \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response includes a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request."
    },
    "paths": {
        "/hugs": {
            "summary": "Hugs Object",
            "get": {
                "tags": [
                    "HUGS"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Hugs": {
                                        "value": [
                                            "Short",
                                            "Long",
                                            "Medium"
                                        ]
                                    },
                                    "None": {
                                        "value": []
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    }
                },
                "summary": "Get all hug types"
            },
            "post": {
                "tags": [
                    "HUGS"
                ],
                "summary": "Add a new hug type",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hugType": {
                                        "type": "string",
                                        "description": "The type of hug to add"
                                    }
                                },
                                "required": ["hugType"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hug type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hug type created successfully."
                                        },
                                        "hugType": {
                                            "type": "string",
                                            "description": "The newly created hug type"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid hug type provided."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
